install.packages('tufte')
raw.dir <- "isnt/extdata"
clean.dir <- "data"
d <- read.csv(file.path(raw.dir,"NCEP NARR surface wind; TKE; HLCY, monthly, 1979-2018, V1.csv"))
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(DataPackageR)
raw.dir <- "isnt/extdata" #raw data directory
clean.dir <- "data" #output directory for cleaned data
d <- read.csv(file.path(raw.dir,"NCEP NARR surface wind; TKE; HLCY, monthly, 1979-2018, V1.csv"))
raw.dir <- "inst/extdata" #raw data directory
d <- read.csv(file.path(raw.dir,"NCEP NARR surface wind; TKE; HLCY, monthly, 1979-2018, V1.csv"))
save(wind_clean1, file = file.path(clean.dir,"wind_clean1.Rdata"))
# Processing steps
wind_clean1 <- d  %>% gather(., Var, Value, GB.uwnd:MAB.tke) %>% #convert wide to long
dplyr::rename(Time = Month.Year) %>% #rename time variable
separate(Var, c("EPU","Var"),"\\.") %>% #separate out EPU from variable names
mutate(Time = as.Date(.$Time,Time, format = "%d-%b-%y"), #Convert to date format
Units = plyr::mapvalues(Var, from = unique(Var), to = c(rep("J/kg",2),"m^2/sec^2","J/kg"))) #Add units column
save(wind_clean1, file = file.path(clean.dir,"wind_clean1.Rdata"))
load(file.path(clean.dir, "wind_clean1.Rdata"))
# create fake data for temperature
mydf <- data.frame(datetime = ISOdatetime(2013,08,04,0,0,0) +
seq(0:50)*10*60,
temp = runif(51, 15, 25))
# take a subset of temperature data,
# basically sampling every 60 minutes
wind <- mydf[minute(mydf$datetime) == 0, ]
# then create fake wind velocity data
wind$velocity <- runif(nrow(wind), -5, 20)
# define an end point for geom_segment
wind$x.end <- wind$datetime + minutes(60)
ggplot(data = mydf, aes(x = datetime, y = temp, group = 1)) +
geom_line() +
geom_segment(data = wind,
size = 3,
aes(x = datetime,
xend = x.end,
y = 10,
yend = velocity),
arrow = arrow(length = unit(0.5, "cm"))) +
theme()
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd")
library(lubridate)
days(1) + wind_clean1$Time[1]
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(5))
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(5)) %>%
ggplot()+
geom_segment(data = .,
size = 3,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length = unit(0.5, "cm"))) +
theme()
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(5)) %>%
ggplot()+
geom_segment(
size = 3,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length = unit(0.5, "cm"))) +
theme()
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(5)) %>%
ggplot()+
geom_segment(
size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length = unit(0.5, "cm"))) +
theme()
size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length = unit(0.15, "cm"))) +
theme()
size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length = unit(0.1, "cm"))) +
theme()
size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed") +
theme()
size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(5)) %>%
ggplot()+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
wind_clean1 %>% filter(EPU == "GB", Var == "uwnd") %>%
mutate(Time.end = Time + days(100)) %>%
ggplot()+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
total_wind_speed <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd"|Var == "vwnd")
View(total_wind_speed)
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd")
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
total_wind_speed <- sqrt(u^2 + v^2)
total_wind_speed <- sqrt(u$Value^2 + v$Value^2)
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
total_wind_speed <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
u[100,]
v[100,]
total_wind_speed <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv
fall <- uv %>% filter(month %in% c(10,11,12))
fall <- uv %>% filter(month %in% c(10,11,12))
winter <- uv %>% filter(month %in% c(1,2,3))
spring <- uv %>% filter(month %in% c(4,5,6))
summer <- uv %>% filter(month %in% c(7,8,9))
seq(1,12,1)
rep("fall",3)))
uv %>% mutate(season, season = mapvalues::plyr(month, from = seq(1,12,1),
to = c(rep("winter",3),
rep("spring",3),
rep("summer",3),
rep("fall",3))))
uv %>% mutate(month, season = mapvalues::plyr(month, from = seq(1,12,1),
to = c(rep("winter",3),
rep("spring",3),
rep("summer",3),
rep("fall",3))))
uv %>% mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("winter",3),
rep("spring",3),
rep("summer",3),
rep("fall",3))))
uv_seasonal <- uv %>% mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("winter",3),
rep("spring",3),
rep("summer",3),
rep("fall",3))))
uv_summary <- uv_seasonal %>% group_by(season, year) %>% dplyr::summarise(mean=mean(total_wind_speed))
View(uv_summary)
mean(uv_seasonal[uv_seasonal$year == 1979 & uv_seasonal$season == "fall",]$total_wind_speed)
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+0.25)
ggplot()+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
dplyr::rename(Time = year)
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+0.25) %>%
dplyr::rename(Time = year)
ggplot()+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = Value),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
theme_bw()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
facet_grid(~,season)%>%
theme_bw()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
facet_grid(~,season)+
theme_bw()
ggplot(data = uv_summary)+
geom_segment(size = 0.5,
aes(x = Time,
xend = Time.end,
y = 0,
yend = mean),
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
facet_grid(.~season)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(Time, mean))+
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
facet_grid(.~season)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
arrow = arrow(length=unit(0.30,"cm"), ends="first", type = "closed")) +
facet_grid(.~season)+
theme_bw()
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_grid(.~season)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_grid(.~season, nrow = 2)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_grid(.~season, nrows = 2)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrows = 2)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
theme_bw()
uv_seasonal <- uv %>% mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("Winter",3),
rep("Spring",3),
rep("Summer",3),
rep("Fall",3))))
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)")
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme(strip.background = element_blank())
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme(strip.background = element_blank()) +
theme_bw()
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank()) +
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank())
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'),
fig.align = "center")
options(htmltools.dir.version = FALSE)
clean.dir <- "data" #output directory for cleaned data
load(file.path(clean.dir, "wind_clean1.Rdata"))
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
uv <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv_seasonal <- uv %>%
mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("Winter",3),
rep("Spring",3),
rep("Summer",3),
rep("Fall",3))))
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank())
load(file.path(clean.dir, "wind_clean1.Rdata"))
load(file.path(clean.dir, "wind_clean1.Rdata"))
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
uv <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv_seasonal <- uv %>%
mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("Winter",3),
rep("Spring",3),
rep("Summer",3),
rep("Fall",3))))
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank())
load(file.path(clean.dir, "wind_clean1.Rdata"))
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
uv <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv_seasonal <- uv %>%
mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("Winter",3),
rep("Spring",3),
rep("Summer",3),
rep("Fall",3))))
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank())
rm(list = ls())
load(file.path(clean.dir, "wind_clean1.Rdata"))
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'),
fig.align = "center")
options(htmltools.dir.version = FALSE)
clean.dir <- "data" #output directory for cleaned data
load(file.path(clean.dir, "wind_clean1.Rdata"))
u <- wind_clean1 %>%
filter(EPU == "MAB", Var == "uwnd") %>%
mutate(month = month(Time), year = year(Time))
v <- wind_clean1 %>%
filter(EPU == "MAB", Var == "vwnd")
uv <- data.frame(u = u$Value,
v = v$Value,
total_wind_speed = sqrt(u$Value^2 + v$Value^2),
month = u$month,
year = u$year)
uv_seasonal <- uv %>%
mutate(month, season = plyr::mapvalues(month, from = seq(1,12,1),
to = c(rep("Winter",3),
rep("Spring",3),
rep("Summer",3),
rep("Fall",3))))
uv_summary <- uv_seasonal %>%
group_by(season, year) %>%
dplyr::summarise(mean=mean(total_wind_speed)) %>%
mutate(Time.end = year+1) %>%
dplyr::rename(Time = year)
ggplot(data = uv_summary)+
geom_line(aes(x = Time, y = mean))+
facet_wrap(.~season, nrow = 2)+
ylab("Wind Speed (m/s)") +
theme_bw()+
theme(strip.background = element_blank())
library(soe)
library(soe)
